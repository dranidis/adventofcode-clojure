(ns advent.2019.d11.core
  (:require
   [advent.2019.d9.core :refer [run-int-code-computer-all
                                run-int-code-computer-all-till visited]]
   [advent.util :refer [draw-grid-condenced grid-2d set-grid str->nums]]
   [clojure.string :as str]
   [clojure.data :as data]))

(def example? false)

(def example "")

(def input (if example? example (slurp "src/advent/2019/d11/input.txt")))
(def instructions (str->nums input))

(defn- mov [current current-dir]
  (let [d (nth [[-1 0] [0 1] [1 0] [0 -1]] current-dir)]
    (mapv + current d)))

(defn- turn [current-dir lr]
  (if (zero? lr)
    (mod (+ 3 current-dir) 4)
    (mod (inc current-dir) 4)))

(def dir-map {0 [-1 0]
              1 [0 1]
              2 [1 0]
              3 [0 -1]})

(defn r [init-white? colors]
  (loop [instr instructions
         cnt 0
         base 0
         white? init-white?
         colors colors
         current [0 0]
         current-dir 0
         visited? #{}]
    (let [;current-clr (if (white? current) 1 0)
          current-clr (get colors current 0)
          ;; _ (println cnt instr)
          rc (run-int-code-computer-all instr cnt base [current-clr])
          f (first rc)]
      (if (not (number? f)) ;; first is instructions map
        (let [[upd-instr outputs new-cnt new-base] rc
              _ (assert (and (vector? outputs) (= 2 (count outputs))))
              [paint-color left-of-right] outputs
              ;; _ (println current-clr outputs)
              _ (assert (and (#{0 1} paint-color) (#{0 1} left-of-right)))
              new-white? (if (zero? paint-color)
                           (disj white? current)
                           (conj white? current))
              new-colors (assoc colors current paint-color)
              new-current-dir (turn current-dir left-of-right)
              _ (assert (#{0 1 2 3} new-current-dir))
              new-current (mapv + current (dir-map new-current-dir))
              ;; _ (assert (and (>= (first new-current) 0)
              ;;                (>= (second new-current) 0))
              ;;           (str new-current colors current new-current-dir))
              ]
          ;; (println  new-current new-current-dir)
          (recur upd-instr
                 new-cnt
                 new-base
                 new-white?
                 new-colors
                 new-current
                 new-current-dir
                 (conj visited? current)))

        [(count colors) colors])))
  ;; (loop [l [[1 0] [0 0] [1,0], [1,0] [0,1], [1,0], [1,0]]
  ;;        white? white?
  ;;        current [0 0]
  ;;        current-dir 0
  ;;        visited? #{}]
  ;;   (let [current-clr (if (white? current) 1 0)]
  ;;     (if (seq l)
  ;;       (let [[clr lr] (first l)
  ;;             new-painted? (if (zero? clr)
  ;;                            (disj white? current)
  ;;                            (conj white? current))
  ;;             new-current-dir (turn current-dir lr)
  ;;             new-current (mov current new-current-dir)]
  ;;         (recur (rest l)
  ;;                new-painted?
  ;;                new-current
  ;;                new-current-dir
  ;;                (conj visited? current)))
  ;;       [(count visited?) white?])))
  )

;; (run-int-code-computer-all instr 0 [0])
;; (run-int-code-computer-all instr 0 [1])

;; (println "ANS 1 " (first (r #{} {})))

(def d (second (r #{[0 0]} {[0 0] 1})))
(def d (->> d (into []) (filter (fn [[p c]] (= c 1))) (mapv first)))
(def minr (apply min (mapv first d)))
(def minc (apply min (mapv second d)))
(def maxr (apply max (mapv first d)))
(def maxc (apply max (mapv second d)))
(def rows (inc (- maxr minr)))
(def cols (inc (- maxc minc)))

(defn- translate [d]
  (fn [p] (mapv - p d)))

(-> (grid-2d rows cols " ")
    (set-grid (mapv (translate [minr minc]) d) \#)
    (draw-grid-condenced))

(println (->> @visited (into []) sort))

(comment (def minr 0)
         (def minc 0)
         (def maxr 6)
         (def maxc 40)
         (def rows (inc (- maxr minr)))
         (def cols (inc (- maxc minc)))

         (loop [instr instructions
                cnt 0
                base 0
                white? #{[0 0]}
                current [0 0]
                current-dir 0
                visited? #{}]
           (-> (grid-2d rows cols " ")
               (set-grid (mapv (translate [minr minc]) white?) \#)
               (draw-grid-condenced))
           (let [current-clr (if (white? current) 1 0)
                 rc (run-int-code-computer-all instr cnt base [current-clr])
                 [upd-instr o new-cnt new-base] rc]
             (if (and (vector? o) (= 2 (count o)))
               (let [[clr lr] o
                     new-painted? (if (zero? clr)
                                    (disj white? current)
                                    (conj white? current))
                     new-current-dir (turn current-dir lr)
                     new-current (mov current new-current-dir)]
                 (recur upd-instr
                        new-cnt
                        new-base
                        new-painted?
                        new-current
                        new-current-dir
                        (conj visited? current)))
               [(count visited?) white?]))))

;; (def i0 {0 3, 1 8, 2 1005, 3 8, 4 284, 5 1106, 6 0, 7 11, 8 0, 9 0, 10 0, 11 104, 12 1, 13 104, 14 0, 15 3, 16 8, 17 102, 18 -1, 19 8, 20 10, 21 101, 22 1, 23 10, 24 10, 25 4, 26 10, 27 108, 28 1, 29 8, 30 10, 31 4, 32 10, 33 102, 34 1, 35 8, 36 28, 37 3, 38 8, 39 102, 40 -1, 41 8, 42 10, 43 101, 44 1, 45 10, 46 10, 47 4, 48 10, 49 108, 50 1, 51 8, 52 10, 53 4, 54 10, 55 101, 56 0, 57 8, 58 50, 59 3, 60 8, 61 1002, 62 8, 63 -1, 64 10, 65 1001, 66 10, 67 1, 68 10, 69 4, 70 10, 71 108, 72 0, 73 8, 74 10, 75 4, 76 10, 77 1001, 78 8, 79 0, 80 72, 81 1006, 82 0, 83 24, 84 1, 85 1106, 86 12, 87 10, 88 1006, 89 0, 90 96, 91 1, 92 1008, 93 15, 94 10, 95 3, 96 8, 97 102, 98 -1, 99 8, 100 10, 101 101, 102 1, 103 10, 104 10, 105 4, 106 10, 107 108, 108 0, 109 8, 110 10, 111 4, 112 10, 113 101, 114 0, 115 8, 116 108, 117 1006, 118 0, 119 54, 120 3, 121 8, 122 1002, 123 8, 124 -1, 125 10, 126 101, 127 1, 128 10, 129 10, 130 4, 131 10, 132 1008, 133 8, 134 1, 135 10, 136 4, 137 10, 138 101, 139 0, 140 8, 141 134, 142 3, 143 8, 144 1002, 145 8, 146 -1, 147 10, 148 1001, 149 10, 150 1, 151 10, 152 4, 153 10, 154 108, 155 1, 156 8, 157 10, 158 4, 159 10, 160 1002, 161 8, 162 1, 163 155, 164 1006, 165 0, 166 60, 167 1006, 168 0, 169 64, 170 3, 171 8, 172 1002, 173 8, 174 -1, 175 10, 176 101, 177 1, 178 10, 179 10, 180 4, 181 10, 182 108, 183 1, 184 8, 185 10, 186 4, 187 10, 188 102, 189 1, 190 8, 191 183, 192 1006, 193 0, 194 6, 195 1006, 196 0, 197 62, 198 3, 199 8, 200 1002, 201 8, 202 -1, 203 10, 204 101, 205 1, 206 10, 207 10, 208 4, 209 10, 210 108, 211 0, 212 8, 213 10, 214 4, 215 10, 216 1002, 217 8, 218 1, 219 211, 220 1, 221 108, 222 0, 223 10, 224 2, 225 1002, 226 15, 227 10, 228 3, 229 8, 230 1002, 231 8, 232 -1, 233 10, 234 1001, 235 10, 236 1, 237 10, 238 4, 239 10, 240 1008, 241 8, 242 0, 243 10, 244 4, 245 10, 246 1001, 247 8, 248 0, 249 242, 250 3, 251 8, 252 102, 253 -1, 254 8, 255 10, 256 1001, 257 10, 258 1, 259 10, 260 4, 261 10, 262 108, 263 0, 264 8, 265 10, 266 4, 267 10, 268 1002, 269 8, 270 1, 271 263, 272 101, 273 1, 274 9, 275 9, 276 1007, 277 9, 278 1010, 279 10, 280 1005, 281 10, 282 15, 283 99, 284 109, 285 606, 286 104, 287 0, 288 104, 289 1, 290 21101, 291 0, 292 666526126996, 293 1, 294 21101, 295 301, 296 0, 297 0, 298 1105, 299 1, 300 405, 301 21101, 302 846138811028, 303 0, 304 1, 305 21101, 306 312, 307 0, 308 0, 309 1106, 310 0, 311 405, 312 3, 313 10, 314 104, 315 0, 316 104, 317 1, 318 3, 319 10, 320 104, 321 0, 322 104, 323 0, 324 3, 325 10, 326 104, 327 0, 328 104, 329 1, 330 3, 331 10, 332 104, 333 0, 334 104, 335 1, 336 3, 337 10, 338 104, 339 0, 340 104, 341 0, 342 3, 343 10, 344 104, 345 0, 346 104, 347 1, 348 21101, 349 0, 350 248129978391, 351 1, 352 21101, 353 359, 354 0, 355 0, 356 1105, 357 1, 358 405, 359 21101, 360 97751403560, 361 0, 362 1, 363 21102, 364 1, 365 370, 366 0, 367 1106, 368 0, 369 405, 370 3, 371 10, 372 104, 373 0, 374 104, 375 0, 376 3, 377 10, 378 104, 379 0, 380 104, 381 0, 382 21101, 383 988753585000, 384 0, 385 1, 386 21101, 387 393, 388 0, 389 0, 390 1105, 391 1, 392 405, 393 21102, 394 867961709324, 395 1, 396 1, 397 21102, 398 404, 399 1, 400 0, 401 1106, 402 0, 403 405, 404 99, 405 109, 406 2, 407 22102, 408 1, 409 -1, 410 1, 411 21102, 412 40, 413 1, 414 2, 415 21101, 416 436, 417 0, 418 3, 419 21102, 420 1, 421 426, 422 0, 423 1105, 424 1, 425 469, 426 109, 427 -2, 428 2106, 429 0, 430 0, 431 0, 432 1, 433 0, 434 0, 435 1, 436 109, 437 2, 438 3, 439 10, 440 204, 441 -1, 442 1001, 443 431, 444 432, 445 447, 446 4, 447 0, 448 1001, 449 431, 450 1, 451 431, 452 108, 453 4, 454 431, 455 10, 456 1006, 457 10, 458 463, 459 1102, 460 0, 461 1, 462 431, 463 109, 464 -2, 465 2106, 466 0, 467 0, 468 0, 469 109, 470 4, 471 1202, 472 -1, 473 1, 474 468, 475 1207, 476 -3, 477 0, 478 10, 479 1006, 480 10, 481 486, 482 21102, 483 1, 484 0, 485 -3, 486 22101, 487 0, 488 -3, 489 1, 490 21202, 491 -2, 492 1, 493 2, 494 21102, 495 1, 496 1, 497 3, 498 21101, 499 505, 500 0, 501 0, 502 1106, 503 0, 504 510, 505 109, 506 -4, 507 2106, 508 0, 509 0, 510 109, 511 5, 512 1207, 513 -3, 514 1, 515 10, 516 1006, 517 10, 518 533, 519 2207, 520 -4, 521 -2, 522 10, 523 1006, 524 10, 525 533, 526 22101, 527 0, 528 -4, 529 -4, 530 1105, 531 1, 532 601, 533 21201, 534 -4, 535 0, 536 1, 537 21201, 538 -3, 539 -1, 540 2, 541 21202, 542 -2, 543 2, 544 3, 545 21102, 546 1, 547 552, 548 0, 549 1105, 550 1, 551 510, 552 21202, 553 1, 554 1, 555 -4, 556 21102, 557 1, 558 1, 559 -1, 560 2207, 561 -4, 562 -2, 563 10, 564 1006, 565 10, 566 571, 567 21102, 568 1, 569 0, 570 -1, 571 22202, 572 -2, 573 -1, 574 -2, 575 2107, 576 0, 577 -3, 578 10, 579 1006, 580 10, 581 593, 582 21202, 583 -1, 584 1, 585 1, 586 21102, 587 1, 588 593, 589 0, 590 106, 591 0, 592 468, 593 21202, 594 -2, 595 -1, 596 -2, 597 22201, 598 -4, 599 -2, 600 -4, 601 109, 602 -5, 603 2105, 604 1, 605 0});; {0 3, 1 8, 2 1005, 3 8, 4 284, 5 1106, 6 0, 7 11, 8 0, 9 0, 10 0, 11 104, 12 1, 13 104, 14 0, 15 3, 16 8, 17 102, 18 -1, 19 8, 20 10, 21 101, 22 1, 23 10, 24 10, 25 4, 26 10, 27 108, 28 1, 29 8, 30 10, 31 4, 32 10, 33 102, 34 1, 35 8, 36 28, 37 3, 38 8, 39 102, 40 -1, 41 8, 42 10, 43 101, 44 1, 45 10, 46 10, 47 4, 48 10, 49 108, 50 1, 51 8, 52 10, 53 4, 54 10, 55 101, 56 0, 57 8, 58 50, 59 3, 60 8, 61 1002, 62 8, 63 -1, 64 10, 65 1001, 66 10, 67 1, 68 10, 69 4, 70 10, 71 108, 72 0, 73 8, 74 10, 75 4, 76 10, 77 1001, 78 8, 79 0, 80 72, 81 1006, 82 0, 83 24, 84 1, 85 1106, 86 12, 87 10, 88 1006, 89 0, 90 96, 91 1, 92 1008, 93 15, 94 10, 95 3, 96 8, 97 102, 98 -1, 99 8, 100 10, 101 101, 102 1, 103 10, 104 10, 105 4, 106 10, 107 108, 108 0, 109 8, 110 10, 111 4, 112 10, 113 101, 114 0, 115 8, 116 108, 117 1006, 118 0, 119 54, 120 3, 121 8, 122 1002, 123 8, 124 -1, 125 10, 126 101, 127 1, 128 10, 129 10, 130 4, 131 10, 132 1008, 133 8, 134 1, 135 10, 136 4, 137 10, 138 101, 139 0, 140 8, 141 134, 142 3, 143 8, 144 1002, 145 8, 146 -1, 147 10, 148 1001, 149 10, 150 1, 151 10, 152 4, 153 10, 154 108, 155 1, 156 8, 157 10, 158 4, 159 10, 160 1002, 161 8, 162 1, 163 155, 164 1006, 165 0, 166 60, 167 1006, 168 0, 169 64, 170 3, 171 8, 172 1002, 173 8, 174 -1, 175 10, 176 101, 177 1, 178 10, 179 10, 180 4, 181 10, 182 108, 183 1, 184 8, 185 10, 186 4, 187 10, 188 102, 189 1, 190 8, 191 183, 192 1006, 193 0, 194 6, 195 1006, 196 0, 197 62, 198 3, 199 8, 200 1002, 201 8, 202 -1, 203 10, 204 101, 205 1, 206 10, 207 10, 208 4, 209 10, 210 108, 211 0, 212 8, 213 10, 214 4, 215 10, 216 1002, 217 8, 218 1, 219 211, 220 1, 221 108, 222 0, 223 10, 224 2, 225 1002, 226 15, 227 10, 228 3, 229 8, 230 1002, 231 8, 232 -1, 233 10, 234 1001, 235 10, 236 1, 237 10, 238 4, 239 10, 240 1008, 241 8, 242 0, 243 10, 244 4, 245 10, 246 1001, 247 8, 248 0, 249 242, 250 3, 251 8, 252 102, 253 -1, 254 8, 255 10, 256 1001, 257 10, 258 1, 259 10, 260 4, 261 10, 262 108, 263 0, 264 8, 265 10, 266 4, 267 10, 268 1002, 269 8, 270 1, 271 263, 272 101, 273 1, 274 9, 275 9, 276 1007, 277 9, 278 1010, 279 10, 280 1005, 281 10, 282 15, 283 99, 284 109, 285 606, 286 104, 287 0, 288 104, 289 1, 290 21101, 291 0, 292 666526126996, 293 1, 294 21101, 295 301, 296 0, 297 0, 298 1105, 299 1, 300 405, 301 21101, 302 846138811028, 303 0, 304 1, 305 21101, 306 312, 307 0, 308 0, 309 1106, 310 0, 311 405, 312 3, 313 10, 314 104, 315 0, 316 104, 317 1, 318 3, 319 10, 320 104, 321 0, 322 104, 323 0, 324 3, 325 10, 326 104, 327 0, 328 104, 329 1, 330 3, 331 10, 332 104, 333 0, 334 104, 335 1, 336 3, 337 10, 338 104, 339 0, 340 104, 341 0, 342 3, 343 10, 344 104, 345 0, 346 104, 347 1, 348 21101, 349 0, 350 248129978391, 351 1, 352 21101, 353 359, 354 0, 355 0, 356 1105, 357 1, 358 405, 359 21101, 360 97751403560, 361 0, 362 1, 363 21102, 364 1, 365 370, 366 0, 367 1106, 368 0, 369 405, 370 3, 371 10, 372 104, 373 0, 374 104, 375 0, 376 3, 377 10, 378 104, 379 0, 380 104, 381 0, 382 21101, 383 988753585000, 384 0, 385 1, 386 21101, 387 393, 388 0, 389 0, 390 1105, 391 1, 392 405, 393 21102, 394 867961709324, 395 1, 396 1, 397 21102, 398 404, 399 1, 400 0, 401 1106, 402 0, 403 405, 404 99, 405 109, 406 2, 407 22102, 408 1, 409 -1, 410 1, 411 21102, 412 40, 413 1, 414 2, 415 21101, 416 436, 417 0, 418 3, 419 21102, 420 1, 421 426, 422 0, 423 1105, 424 1, 425 469, 426 109, 427 -2, 428 2106, 429 0, 430 0, 431 0, 432 1, 433 0, 434 0, 435 1, 436 109, 437 2, 438 3, 439 10, 440 204, 441 -1, 442 1001, 443 431, 444 432, 445 447, 446 4, 447 0, 448 1001, 449 431, 450 1, 451 431, 452 108, 453 4, 454 431, 455 10, 456 1006, 457 10, 458 463, 459 1102, 460 0, 461 1, 462 431, 463 109, 464 -2, 465 2106, 466 0, 467 0, 468 0, 469 109, 470 4, 471 1202, 472 -1, 473 1, 474 468, 475 1207, 476 -3, 477 0, 478 10, 479 1006, 480 10, 481 486, 482 21102, 483 1, 484 0, 485 -3, 486 22101, 487 0, 488 -3, 489 1, 490 21202, 491 -2, 492 1, 493 2, 494 21102, 495 1, 496 1, 497 3, 498 21101, 499 505, 500 0, 501 0, 502 1106, 503 0, 504 510, 505 109, 506 -4, 507 2106, 508 0, 509 0, 510 109, 511 5, 512 1207, 513 -3, 514 1, 515 10, 516 1006, 517 10, 518 533, 519 2207, 520 -4, 521 -2, 522 10, 523 1006, 524 10, 525 533, 526 22101, 527 0, 528 -4, 529 -4, 530 1105, 531 1, 532 601, 533 21201, 534 -4, 535 0, 536 1, 537 21201, 538 -3, 539 -1, 540 2, 541 21202, 542 -2, 543 2, 544 3, 545 21102, 546 1, 547 552, 548 0, 549 1105, 550 1, 551 510, 552 21202, 553 1, 554 1, 555 -4, 556 21102, 557 1, 558 1, 559 -1, 560 2207, 561 -4, 562 -2, 563 10, 564 1006, 565 10, 566 571, 567 21102, 568 1, 569 0, 570 -1, 571 22202, 572 -2, 573 -1, 574 -2, 575 2107, 576 0, 577 -3, 578 10, 579 1006, 580 10, 581 593, 582 21202, 583 -1, 584 1, 585 1, 586 21102, 587 1, 588 593, 589 0, 590 106, 591 0, 592 468, 593 21202, 594 -2, 595 -1, 596 -2, 597 22201, 598 -4, 599 -2, 600 -4, 601 109, 602 -5, 603 2105, 604 1, 605 0}
;; (def i1 {0 3, 1 8, 2 1005, 3 8, 4 284, 5 1106, 6 0, 7 11, 8 1, 9 0, 10 0, 11 104, 12 1, 13 104, 14 0, 15 3, 16 8, 17 102, 18 -1, 19 8, 20 10, 21 101, 22 1, 23 10, 24 10, 25 4, 26 10, 27 108, 28 1, 29 8, 30 10, 31 4, 32 10, 33 102, 34 1, 35 8, 36 28, 37 3, 38 8, 39 102, 40 -1, 41 8, 42 10, 43 101, 44 1, 45 10, 46 10, 47 4, 48 10, 49 108, 50 1, 51 8, 52 10, 53 4, 54 10, 55 101, 56 0, 57 8, 58 50, 59 3, 60 8, 61 1002, 62 8, 63 -1, 64 10, 65 1001, 66 10, 67 1, 68 10, 69 4, 70 10, 71 108, 72 0, 73 8, 74 10, 75 4, 76 10, 77 1001, 78 8, 79 0, 80 72, 81 1006, 82 0, 83 24, 84 1, 85 1106, 86 12, 87 10, 88 1006, 89 0, 90 96, 91 1, 92 1008, 93 15, 94 10, 95 3, 96 8, 97 102, 98 -1, 99 8, 100 10, 101 101, 102 1, 103 10, 104 10, 105 4, 106 10, 107 108, 108 0, 109 8, 110 10, 111 4, 112 10, 113 101, 114 0, 115 8, 116 108, 117 1006, 118 0, 119 54, 120 3, 121 8, 122 1002, 123 8, 124 -1, 125 10, 126 101, 127 1, 128 10, 129 10, 130 4, 131 10, 132 1008, 133 8, 134 1, 135 10, 136 4, 137 10, 138 101, 139 0, 140 8, 141 134, 142 3, 143 8, 144 1002, 145 8, 146 -1, 147 10, 148 1001, 149 10, 150 1, 151 10, 152 4, 153 10, 154 108, 155 1, 156 8, 157 10, 158 4, 159 10, 160 1002, 161 8, 162 1, 163 155, 164 1006, 165 0, 166 60, 167 1006, 168 0, 169 64, 170 3, 171 8, 172 1002, 173 8, 174 -1, 175 10, 176 101, 177 1, 178 10, 179 10, 180 4, 181 10, 182 108, 183 1, 184 8, 185 10, 186 4, 187 10, 188 102, 189 1, 190 8, 191 183, 192 1006, 193 0, 194 6, 195 1006, 196 0, 197 62, 198 3, 199 8, 200 1002, 201 8, 202 -1, 203 10, 204 101, 205 1, 206 10, 207 10, 208 4, 209 10, 210 108, 211 0, 212 8, 213 10, 214 4, 215 10, 216 1002, 217 8, 218 1, 219 211, 220 1, 221 108, 222 0, 223 10, 224 2, 225 1002, 226 15, 227 10, 228 3, 229 8, 230 1002, 231 8, 232 -1, 233 10, 234 1001, 235 10, 236 1, 237 10, 238 4, 239 10, 240 1008, 241 8, 242 0, 243 10, 244 4, 245 10, 246 1001, 247 8, 248 0, 249 242, 250 3, 251 8, 252 102, 253 -1, 254 8, 255 10, 256 1001, 257 10, 258 1, 259 10, 260 4, 261 10, 262 108, 263 0, 264 8, 265 10, 266 4, 267 10, 268 1002, 269 8, 270 1, 271 263, 272 101, 273 1, 274 9, 275 9, 276 1007, 277 9, 278 1010, 279 10, 280 1005, 281 10, 282 15, 283 99, 284 109, 285 606, 286 104, 287 0, 288 104, 289 1, 290 21101, 291 0, 292 666526126996, 293 1, 294 21101, 295 301, 296 0, 297 0, 298 1105, 299 1, 300 405, 301 21101, 302 846138811028, 303 0, 304 1, 305 21101, 306 312, 307 0, 308 0, 309 1106, 310 0, 311 405, 312 3, 313 10, 314 104, 315 0, 316 104, 317 1, 318 3, 319 10, 320 104, 321 0, 322 104, 323 0, 324 3, 325 10, 326 104, 327 0, 328 104, 329 1, 330 3, 331 10, 332 104, 333 0, 334 104, 335 1, 336 3, 337 10, 338 104, 339 0, 340 104, 341 0, 342 3, 343 10, 344 104, 345 0, 346 104, 347 1, 348 21101, 349 0, 350 248129978391, 351 1, 352 21101, 353 359, 354 0, 355 0, 356 1105, 357 1, 358 405, 359 21101, 360 97751403560, 361 0, 362 1, 363 21102, 364 1, 365 370, 366 0, 367 1106, 368 0, 369 405, 370 3, 371 10, 372 104, 373 0, 374 104, 375 0, 376 3, 377 10, 378 104, 379 0, 380 104, 381 0, 382 21101, 383 988753585000, 384 0, 385 1, 386 21101, 387 393, 388 0, 389 0, 390 1105, 391 1, 392 405, 393 21102, 394 867961709324, 395 1, 396 1, 397 21102, 398 404, 399 1, 400 0, 401 1106, 402 0, 403 405, 404 99, 405 109, 406 2, 407 22102, 408 1, 409 -1, 410 1, 411 21102, 412 40, 413 1, 414 2, 415 21101, 416 436, 417 0, 418 3, 419 21102, 420 1, 421 426, 422 0, 423 1105, 424 1, 425 469, 426 109, 427 -2, 428 2106, 429 0, 430 0, 431 0, 432 1, 433 0, 434 0, 435 1, 436 109, 437 2, 438 3, 439 10, 440 204, 441 -1, 442 1001, 443 431, 444 432, 445 447, 446 4, 447 0, 448 1001, 449 431, 450 1, 451 431, 452 108, 453 4, 454 431, 455 10, 456 1006, 457 10, 458 463, 459 1102, 460 0, 461 1, 462 431, 463 109, 464 -2, 465 2106, 466 0, 467 0, 468 0, 469 109, 470 4, 471 1202, 472 -1, 473 1, 474 468, 475 1207, 476 -3, 477 0, 478 10, 479 1006, 480 10, 481 486, 482 21102, 483 1, 484 0, 485 -3, 486 22101, 487 0, 488 -3, 489 1, 490 21202, 491 -2, 492 1, 493 2, 494 21102, 495 1, 496 1, 497 3, 498 21101, 499 505, 500 0, 501 0, 502 1106, 503 0, 504 510, 505 109, 506 -4, 507 2106, 508 0, 509 0, 510 109, 511 5, 512 1207, 513 -3, 514 1, 515 10, 516 1006, 517 10, 518 533, 519 2207, 520 -4, 521 -2, 522 10, 523 1006, 524 10, 525 533, 526 22101, 527 0, 528 -4, 529 -4, 530 1105, 531 1, 532 601, 533 21201, 534 -4, 535 0, 536 1, 537 21201, 538 -3, 539 -1, 540 2, 541 21202, 542 -2, 543 2, 544 3, 545 21102, 546 1, 547 552, 548 0, 549 1105, 550 1, 551 510, 552 21202, 553 1, 554 1, 555 -4, 556 21102, 557 1, 558 1, 559 -1, 560 2207, 561 -4, 562 -2, 563 10, 564 1006, 565 10, 566 571, 567 21102, 568 1, 569 0, 570 -1, 571 22202, 572 -2, 573 -1, 574 -2, 575 2107, 576 0, 577 -3, 578 10, 579 1006, 580 10, 581 593, 582 21202, 583 -1, 584 1, 585 1, 586 21102, 587 1, 588 593, 589 0, 590 106, 591 0, 592 468, 593 21202, 594 -2, 595 -1, 596 -2, 597 22201, 598 -4, 599 -2, 600 -4, 601 109, 602 -5, 603 2105, 604 1, 605 0})
;; (def i2 {0 3, 1 8, 2 1005, 3 8, 4 284, 5 1106, 6 0, 7 11, 8 1, 9 0, 10 0, 11 104, 12 1, 13 104, 14 0, 15 3, 16 8, 17 102, 18 -1, 19 8, 20 10, 21 101, 22 1, 23 10, 24 10, 25 4, 26 10, 27 108, 28 1, 29 8, 30 10, 31 4, 32 10, 33 102, 34 1, 35 8, 36 28, 37 3, 38 8, 39 102, 40 -1, 41 8, 42 10, 43 101, 44 1, 45 10, 46 10, 47 4, 48 10, 49 108, 50 1, 51 8, 52 10, 53 4, 54 10, 55 101, 56 0, 57 8, 58 50, 59 3, 60 8, 61 1002, 62 8, 63 -1, 64 10, 65 1001, 66 10, 67 1, 68 10, 69 4, 70 10, 71 108, 72 0, 73 8, 74 10, 75 4, 76 10, 77 1001, 78 8, 79 0, 80 72, 81 1006, 82 0, 83 24, 84 1, 85 1106, 86 12, 87 10, 88 1006, 89 0, 90 96, 91 1, 92 1008, 93 15, 94 10, 95 3, 96 8, 97 102, 98 -1, 99 8, 100 10, 101 101, 102 1, 103 10, 104 10, 105 4, 106 10, 107 108, 108 0, 109 8, 110 10, 111 4, 112 10, 113 101, 114 0, 115 8, 116 108, 117 1006, 118 0, 119 54, 120 3, 121 8, 122 1002, 123 8, 124 -1, 125 10, 126 101, 127 1, 128 10, 129 10, 130 4, 131 10, 132 1008, 133 8, 134 1, 135 10, 136 4, 137 10, 138 101, 139 0, 140 8, 141 134, 142 3, 143 8, 144 1002, 145 8, 146 -1, 147 10, 148 1001, 149 10, 150 1, 151 10, 152 4, 153 10, 154 108, 155 1, 156 8, 157 10, 158 4, 159 10, 160 1002, 161 8, 162 1, 163 155, 164 1006, 165 0, 166 60, 167 1006, 168 0, 169 64, 170 3, 171 8, 172 1002, 173 8, 174 -1, 175 10, 176 101, 177 1, 178 10, 179 10, 180 4, 181 10, 182 108, 183 1, 184 8, 185 10, 186 4, 187 10, 188 102, 189 1, 190 8, 191 183, 192 1006, 193 0, 194 6, 195 1006, 196 0, 197 62, 198 3, 199 8, 200 1002, 201 8, 202 -1, 203 10, 204 101, 205 1, 206 10, 207 10, 208 4, 209 10, 210 108, 211 0, 212 8, 213 10, 214 4, 215 10, 216 1002, 217 8, 218 1, 219 211, 220 1, 221 108, 222 0, 223 10, 224 2, 225 1002, 226 15, 227 10, 228 3, 229 8, 230 1002, 231 8, 232 -1, 233 10, 234 1001, 235 10, 236 1, 237 10, 238 4, 239 10, 240 1008, 241 8, 242 0, 243 10, 244 4, 245 10, 246 1001, 247 8, 248 0, 249 242, 250 3, 251 8, 252 102, 253 -1, 254 8, 255 10, 256 1001, 257 10, 258 1, 259 10, 260 4, 261 10, 262 108, 263 0, 264 8, 265 10, 266 4, 267 10, 268 1002, 269 8, 270 1, 271 263, 272 101, 273 1, 274 9, 275 9, 276 1007, 277 9, 278 1010, 279 10, 280 1005, 281 10, 282 15, 283 99, 284 109, 285 606, 286 104, 287 0, 288 104, 289 1, 290 21101, 291 0, 292 666526126996, 293 1, 294 21101, 295 301, 296 0, 297 0, 298 1105, 299 1, 300 405, 301 21101, 302 846138811028, 303 0, 304 1, 305 21101, 306 312, 307 0, 308 0, 309 1106, 310 0, 311 405, 312 3, 313 10, 314 104, 315 0, 316 104, 317 1, 318 3, 319 10, 320 104, 321 0, 322 104, 323 0, 324 3, 325 10, 326 104, 327 0, 328 104, 329 1, 330 3, 331 10, 332 104, 333 0, 334 104, 335 1, 336 3, 337 10, 338 104, 339 0, 340 104, 341 0, 342 3, 343 10, 344 104, 345 0, 346 104, 347 1, 348 21101, 349 0, 350 248129978391, 351 1, 352 21101, 353 359, 354 0, 355 0, 356 1105, 357 1, 358 405, 359 21101, 360 97751403560, 361 0, 362 1, 363 21102, 364 1, 365 370, 366 0, 367 1106, 368 0, 369 405, 370 3, 371 10, 372 104, 373 0, 374 104, 375 0, 376 3, 377 10, 378 104, 379 0, 380 104, 381 0, 382 21101, 383 988753585000, 384 0, 385 1, 386 21101, 387 393, 388 0, 389 0, 390 1105, 391 1, 392 405, 393 21102, 394 867961709324, 395 1, 396 1, 397 21102, 398 404, 399 1, 400 0, 401 1106, 402 0, 403 405, 404 99, 405 109, 406 2, 407 22102, 408 1, 409 -1, 410 1, 411 21102, 412 40, 413 1, 414 2, 415 21101, 416 436, 417 0, 418 3, 419 21102, 420 1, 421 426, 422 0, 423 1105, 424 1, 425 469, 426 109, 427 -2, 428 2106, 429 0, 430 0, 431 0, 432 1, 433 0, 434 0, 435 1, 436 109, 437 2, 438 3, 439 10, 440 204, 441 -1, 442 1001, 443 431, 444 432, 445 447, 446 4, 447 0, 448 1001, 449 431, 450 1, 451 431, 452 108, 453 4, 454 431, 455 10, 456 1006, 457 10, 458 463, 459 1102, 460 0, 461 1, 462 431, 463 109, 464 -2, 465 2106, 466 0, 467 0, 468 0, 469 109, 470 4, 471 1202, 472 -1, 473 1, 474 468, 475 1207, 476 -3, 477 0, 478 10, 479 1006, 480 10, 481 486, 482 21102, 483 1, 484 0, 485 -3, 486 22101, 487 0, 488 -3, 489 1, 490 21202, 491 -2, 492 1, 493 2, 494 21102, 495 1, 496 1, 497 3, 498 21101, 499 505, 500 0, 501 0, 502 1106, 503 0, 504 510, 505 109, 506 -4, 507 2106, 508 0, 509 0, 510 109, 511 5, 512 1207, 513 -3, 514 1, 515 10, 516 1006, 517 10, 518 533, 519 2207, 520 -4, 521 -2, 522 10, 523 1006, 524 10, 525 533, 526 22101, 527 0, 528 -4, 529 -4, 530 1105, 531 1, 532 601, 533 21201, 534 -4, 535 0, 536 1, 537 21201, 538 -3, 539 -1, 540 2, 541 21202, 542 -2, 543 2, 544 3, 545 21102, 546 1, 547 552, 548 0, 549 1105, 550 1, 551 510, 552 21202, 553 1, 554 1, 555 -4, 556 21102, 557 1, 558 1, 559 -1, 560 2207, 561 -4, 562 -2, 563 10, 564 1006, 565 10, 566 571, 567 21102, 568 1, 569 0, 570 -1, 571 22202, 572 -2, 573 -1, 574 -2, 575 2107, 576 0, 577 -3, 578 10, 579 1006, 580 10, 581 593, 582 21202, 583 -1, 584 1, 585 1, 586 21102, 587 1, 588 593, 589 0, 590 106, 591 0, 592 468, 593 21202, 594 -2, 595 -1, 596 -2, 597 22201, 598 -4, 599 -2, 600 -4, 601 109, 602 -5, 603 2105, 604 1, 605 0})
;; (def i3 {0 3, 1 8, 2 1005, 3 8, 4 284, 5 1106, 6 0, 7 11, 8 1, 9 0, 10 0, 11 104, 12 1, 13 104, 14 0, 15 3, 16 8, 17 102, 18 -1, 19 8, 20 10, 21 101, 22 1, 23 10, 24 10, 25 4, 26 10, 27 108, 28 1, 29 8, 30 10, 31 4, 32 10, 33 102, 34 1, 35 8, 36 28, 37 3, 38 8, 39 102, 40 -1, 41 8, 42 10, 43 101, 44 1, 45 10, 46 10, 47 4, 48 10, 49 108, 50 1, 51 8, 52 10, 53 4, 54 10, 55 101, 56 0, 57 8, 58 50, 59 3, 60 8, 61 1002, 62 8, 63 -1, 64 10, 65 1001, 66 10, 67 1, 68 10, 69 4, 70 10, 71 108, 72 0, 73 8, 74 10, 75 4, 76 10, 77 1001, 78 8, 79 0, 80 72, 81 1006, 82 0, 83 24, 84 1, 85 1106, 86 12, 87 10, 88 1006, 89 0, 90 96, 91 1, 92 1008, 93 15, 94 10, 95 3, 96 8, 97 102, 98 -1, 99 8, 100 10, 101 101, 102 1, 103 10, 104 10, 105 4, 106 10, 107 108, 108 0, 109 8, 110 10, 111 4, 112 10, 113 101, 114 0, 115 8, 116 108, 117 1006, 118 0, 119 54, 120 3, 121 8, 122 1002, 123 8, 124 -1, 125 10, 126 101, 127 1, 128 10, 129 10, 130 4, 131 10, 132 1008, 133 8, 134 1, 135 10, 136 4, 137 10, 138 101, 139 0, 140 8, 141 134, 142 3, 143 8, 144 1002, 145 8, 146 -1, 147 10, 148 1001, 149 10, 150 1, 151 10, 152 4, 153 10, 154 108, 155 1, 156 8, 157 10, 158 4, 159 10, 160 1002, 161 8, 162 1, 163 155, 164 1006, 165 0, 166 60, 167 1006, 168 0, 169 64, 170 3, 171 8, 172 1002, 173 8, 174 -1, 175 10, 176 101, 177 1, 178 10, 179 10, 180 4, 181 10, 182 108, 183 1, 184 8, 185 10, 186 4, 187 10, 188 102, 189 1, 190 8, 191 183, 192 1006, 193 0, 194 6, 195 1006, 196 0, 197 62, 198 3, 199 8, 200 1002, 201 8, 202 -1, 203 10, 204 101, 205 1, 206 10, 207 10, 208 4, 209 10, 210 108, 211 0, 212 8, 213 10, 214 4, 215 10, 216 1002, 217 8, 218 1, 219 211, 220 1, 221 108, 222 0, 223 10, 224 2, 225 1002, 226 15, 227 10, 228 3, 229 8, 230 1002, 231 8, 232 -1, 233 10, 234 1001, 235 10, 236 1, 237 10, 238 4, 239 10, 240 1008, 241 8, 242 0, 243 10, 244 4, 245 10, 246 1001, 247 8, 248 0, 249 242, 250 3, 251 8, 252 102, 253 -1, 254 8, 255 10, 256 1001, 257 10, 258 1, 259 10, 260 4, 261 10, 262 108, 263 0, 264 8, 265 10, 266 4, 267 10, 268 1002, 269 8, 270 1, 271 263, 272 101, 273 1, 274 9, 275 9, 276 1007, 277 9, 278 1010, 279 10, 280 1005, 281 10, 282 15, 283 99, 284 109, 285 606, 286 104, 287 0, 288 104, 289 1, 290 21101, 291 0, 292 666526126996, 293 1, 294 21101, 295 301, 296 0, 297 0, 298 1105, 299 1, 300 405, 301 21101, 302 846138811028, 303 0, 304 1, 305 21101, 306 312, 307 0, 308 0, 309 1106, 310 0, 311 405, 312 3, 313 10, 314 104, 315 0, 316 104, 317 1, 318 3, 319 10, 320 104, 321 0, 322 104, 323 0, 324 3, 325 10, 326 104, 327 0, 328 104, 329 1, 330 3, 331 10, 332 104, 333 0, 334 104, 335 1, 336 3, 337 10, 338 104, 339 0, 340 104, 341 0, 342 3, 343 10, 344 104, 345 0, 346 104, 347 1, 348 21101, 349 0, 350 248129978391, 351 1, 352 21101, 353 359, 354 0, 355 0, 356 1105, 357 1, 358 405, 359 21101, 360 97751403560, 361 0, 362 1, 363 21102, 364 1, 365 370, 366 0, 367 1106, 368 0, 369 405, 370 3, 371 10, 372 104, 373 0, 374 104, 375 0, 376 3, 377 10, 378 104, 379 0, 380 104, 381 0, 382 21101, 383 988753585000, 384 0, 385 1, 386 21101, 387 393, 388 0, 389 0, 390 1105, 391 1, 392 405, 393 21102, 394 867961709324, 395 1, 396 1, 397 21102, 398 404, 399 1, 400 0, 401 1106, 402 0, 403 405, 404 99, 405 109, 406 2, 407 22102, 408 1, 409 -1, 410 1, 411 21102, 412 40, 413 1, 414 2, 415 21101, 416 436, 417 0, 418 3, 419 21102, 420 1, 421 426, 422 0, 423 1105, 424 1, 425 469, 426 109, 427 -2, 428 2106, 429 0, 430 0, 431 0, 432 1, 433 0, 434 0, 435 1, 436 109, 437 2, 438 3, 439 10, 440 204, 441 -1, 442 1001, 443 431, 444 432, 445 447, 446 4, 447 0, 448 1001, 449 431, 450 1, 451 431, 452 108, 453 4, 454 431, 455 10, 456 1006, 457 10, 458 463, 459 1102, 460 0, 461 1, 462 431, 463 109, 464 -2, 465 2106, 466 0, 467 0, 468 0, 469 109, 470 4, 471 1202, 472 -1, 473 1, 474 468, 475 1207, 476 -3, 477 0, 478 10, 479 1006, 480 10, 481 486, 482 21102, 483 1, 484 0, 485 -3, 486 22101, 487 0, 488 -3, 489 1, 490 21202, 491 -2, 492 1, 493 2, 494 21102, 495 1, 496 1, 497 3, 498 21101, 499 505, 500 0, 501 0, 502 1106, 503 0, 504 510, 505 109, 506 -4, 507 2106, 508 0, 509 0, 510 109, 511 5, 512 1207, 513 -3, 514 1, 515 10, 516 1006, 517 10, 518 533, 519 2207, 520 -4, 521 -2, 522 10, 523 1006, 524 10, 525 533, 526 22101, 527 0, 528 -4, 529 -4, 530 1105, 531 1, 532 601, 533 21201, 534 -4, 535 0, 536 1, 537 21201, 538 -3, 539 -1, 540 2, 541 21202, 542 -2, 543 2, 544 3, 545 21102, 546 1, 547 552, 548 0, 549 1105, 550 1, 551 510, 552 21202, 553 1, 554 1, 555 -4, 556 21102, 557 1, 558 1, 559 -1, 560 2207, 561 -4, 562 -2, 563 10, 564 1006, 565 10, 566 571, 567 21102, 568 1, 569 0, 570 -1, 571 22202, 572 -2, 573 -1, 574 -2, 575 2107, 576 0, 577 -3, 578 10, 579 1006, 580 10, 581 593, 582 21202, 583 -1, 584 1, 585 1, 586 21102, 587 1, 588 593, 589 0, 590 106, 591 0, 592 468, 593 21202, 594 -2, 595 -1, 596 -2, 597 22201, 598 -4, 599 -2, 600 -4, 601 109, 602 -5, 603 2105, 604 1, 605 0})

;; (def map-i (into {} (map-indexed vector instructions)))
;; (= map-i i0)

;; (def r1 (run-int-code-computer-all-till instructions 0 [1] 1))
;; (= (:ins r1) i1)

;; (def r2 (run-int-code-computer-all-till (:ins r1) (:cnt r1) [] 1))
;; (= (:ins r2) i2)

;; (def r3 (run-int-code-computer-all-till (:ins r2) (:cnt r2) [] 1))
;; (= (:ins r3) i3)

;; (def i (->> (str/split-lines (slurp "out.py"))
;;             (mapv (fn [l]
;;                     (read-string l)))))

;; (comment

;;   (= i0 (get i 0))
;;   (= i1 (get i 1))

;;   (def map-i (into {} (map-indexed vector instructions)))
;;   (= map-i (get i 0))

;;   (def r1 (run-int-code-computer-all-till instructions 0 [1] 1))
;;   (= (:ins r1) (get i 1))

;;   (def r2 (run-int-code-computer-all-till (:ins r1) (:cnt r1) [] 1))
;;   (= (:ins r2) (get i 2))

;;   (def r3 (run-int-code-computer-all-till (:ins r2) (:cnt r2) [] 1))
;;   (= (:ins r3) (get i 3)))

;; (loop [i i
;;        inst instructions
;;        cnt 0
;;        in [1]
;;        c 0]
;;   (println c)
;;   (let [r (run-int-code-computer-all-till inst cnt in 1)
;;         _ (assert (= (:ins r) (first i)) (str (vec (take 2 (data/diff (:ints r) (first r))))))]
;;     (recur (rest i) (:ins r) (:cnt r) [] (inc c))))

;; [nil [:ins {0 3, 558 1, 453 4, 584 1, 487 0, 519 2207, 357 1, 275 9, 530 1105, 389 0, 586 21102, 410 1, 433 0, 521 -2, 451 431, 291 0, 443 431, 249 242, 299 1, 121 8, 287 0, 65 1001, 70 10, 218 1, 62 8, 74 10, 475 1207, 497 3, 580 10, 164 1006, 282 15, 273 1, 186 4, 430 0, 529 -4, 370 3, 233 10, 298 1105, 188 102, 240 1008, 110 10, 130 4, 311 405, 128 10, 399 1, 377 10, 468 0, 259 10, 210 108, 229 8, 153 10, 213 10, 343 10, 472 -1, 7 11, 59 3, 473 1, 86 12, 491 -2, 154 108, 20 10, 224 2, 355 0, 592 468, 571 22202, 466 0, 72 0, 454 431, 463 109, 58 50, 205 1, 555 -4, 552 21202, 60 8, 459 1102, 175 10, 322 104, 510 109, 27 108, 352 21101, 493 2, 416 436, 1 666526126996, 69 4, 101 101, 24 10, 547 552, 102 1, 385 1, 135 10, 397 21102, 490 21202, 354 0, 360 97751403560, 55 101, 568 1, 269 8, 448 1001, 527 0, 206 10, 165 0, 387 393, 85 1106, 225 1002, 297 0, 39 102, 274 9, 88 1006, 217 8, 46 10
;;             , 508 0, 149 10, 415 21101, 239 10, 478 10, 157 10, 345 0, 300 405, 4 284, 550 1, 204 101, 470 4, 77 1001, 106 10, 197 62, 405 109, 518 533, 232 -1, 260 4, 267 10, 119 54, 319 10, 534 -4, 222 0, 603 2105, 293 1, 95 3, 450 1, 329 1, 144 1002, 504 510, 505 109, 176 101, 471 1202, 349 0, 512 1207, 192 1006, 54 10, 92 1008, 221 108, 141 134, 502 1106, 464 -2, 307 0, 290 21101, 517 10, 361 0, 264 8, 137 10, 356 1105, 327 0, 234 1001, 104 10, 353 359, 15 3, 48 10, 242 0, 50 1, 557 1, 251 8, 394 867961709324, 116 108, 585 1, 583 -1, 75 4, 437 2, 516 1006, 159 10, 99 8, 540 2, 479 1006, 281 10, 402 0, 429 0, 309 1106, 458 463, 21 101, 388 0, 495 1, 31 4, 113 101, 32 10, 407 22102, 398 404, 136 4, 139 0, 506 -4, 396 1, 460 0, 483 1, 589 0, 581 593, 174 -1, 578 10, 331 10, 363 21102, 284 109, 208 4, 305 21101, 182 108, 256 1001, 514 1, 485 -3, 214 4, 193 0, 442 1001, 561 -4, 241 8, 314 104, 226 15, 235 10, 420 1, 418 3, 262 108, 263 0, 304 1, 401 1106, 40 -1, 129 10, 600 -4, 467 0, 445 447, 317 1, 294 21101, 91 1, 364
;;             1, 515 10, 412 40, 553 1, 341 0, 117 1006, 523 1006, 172 1002, 601 109, 108 0, 156 8, 358 405, 308 0, 531 1, 223 10, 419 21102, 365 370, 181 10, 417 0, 278 1010, 56 0, 33 102, 13 104, 22 1, 380 104, 257 10, 338 104, 500 0, 168 0, 496 1, 347 1, 501 0, 596 -2, 90 96, 237 10, 292 666526126996, 109 8, 216 1002, 191 183, 498 21101, 375 0, 525 533, 367 1106, 143 8, 178 10, 247 8, 328 104, 391 1, 167 1006, 36 28, 41 8, 474 468, 187 10, 551 510, 528 -4, 599 -2, 376 3, 195 1006, 316 104, 428 2106, 303 0, 368 0, 560 2207, 565 10, 310 0, 366 0, 118 0, 522 10, 150 1, 313 10, 384 0, 567 21102, 238 4, 196 0, 162 1, 393 21102, 184 8, 219 211, 461 1, 89 0, 100 10, 426 109, 604 1, 477 0, 541 21202, 351 1, 243 10, 131 10, 122 1002, 43 101, 231 8, 61 1002, 598 -4, 413 1, 29 8, 151 10, 369 405, 348 21101, 575 2107, 44 1, 258 1, 250 3, 539 -1, 301 21101, 424 1, 93 15, 6 0, 573 -1, 408 1, 563 10, 111 4, 28 1, 456 1006, 374 104, 548 0, 538 -3, 411 21102, 134 1, 64 10, 465 2106, 334 104, 323 0, 189 1, 280 1005, 198 3, 155 1, 295 301
;;             , 248 0, 587 1, 285 606, 507 2106, 227 10, 476 -3, 494 21102, 220 1, 103 10, 170 3, 51 8, 25 4, 261 10, 201 8, 590 106, 489 1, 166 60, 447 0, 34 1, 252 102, 325 10, 594 -2, 436 109, 535 0, 146 -1, 228 3, 306 312, 125 10, 276 1007, 340 104, 148 1001, 482 21102, 588 593, 17 102, 312 3, 3 8, 520 -4, 286 104, 279 10, 536 1, 12 1, 440 204, 332 104, 330 3, 382 21101, 152 4, 544 3, 435 1, 342 3, 2 1005, 66 10, 484 0, 439 10, 236 1, 556 21102, 373 0, 142 3, 359 21101, 371 10, 444 432, 570 -1, 107 108, 532 601, 23 10, 230 1002, 47 4, 526 22101, 180 4, 537 21201, 158 4, 350 248129978391, 35 8, 127 1, 383 988753585000, 533 21201, 302 846138811028, 564 1006, 566 571, 82 0, 76 10, 492 1, 215 10, 97 102, 277 9, 19 8, 335 1, 597 22201, 57 8, 202 -1, 68 10, 452 108, 200 1002, 11 104, 115 8, 339 0, 431 0, 462 431, 337 10, 255 10, 503 0, 546 1, 9 0, 457 10, 427 -2, 145 8, 5 1106, 244 4, 289 1, 112 10, 414 2, 179 10, 344 104, 481 486, 245 10, 378 104, 266 4, 324 3, 446 4, 524 10, 254 8, 404 99, 283 99, 513 -3, 572 -2, 83 24, 13
;;             8 101, 346 104, 14 0, 455 10, 265 10, 449 431, 333 0, 569 0, 326 104, 45 10, 53 4, 559 -1, 78 8, 562 -2, 542 -2, 315 0, 480 10, 132 1008, 26 10, 123 8, 203 10, 392 405, 577 -3, 140 8, 321 0, 441 -1, 268 1002, 16 8, 320 104, 133 8, 288 104, 381 0, 605 0, 163 155, 81 1006, 120 3, 79 0, 211 0, 38 8, 173 8, 126 101, 421 426, 593 21202, 98 -1, 422 0, 423 1105, 582 21202, 554 1, 409 -1, 574 -2, 595 -1, 124 -1, 171 8, 87 10, 169 64, 160 1002, 30 10, 400 0, 509 0, 207 10, 434 0, 194 6, 511 5, 73 8, 486 22101, 336 3, 96 8, 10 0, 272 101, 499 505, 488 -3, 386 21101, 270 1, 576 0, 543 2, 271 263, 18 -1, 395 1, 403 405, 469 109, 105 4, 185 10, 52 10, 545 21102, 114 0, 253 -1, 209 10, 147 10, 425 469, 67 1, 296 0, 602 -5, 318 3, 161 8, 372 104, 406 2, 438 3, 71 108, 579 1006, 42 10, 80 72, 199 8, 591 0, 37 3, 183 1, 432 1, 379 0, 63 -1, 212 8, 94 10, 362 1, 8 1, 246 1001, 190 8, 549 1105, 177 1, 49 108, 390 1105, 84 1}]]
 